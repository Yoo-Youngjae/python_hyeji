[Hw1]
for number in range(1, 1001):
    if number % 3 == 0:
        print(number)
        
[Hw2]
sum = 0
for number in range(1, 1001):
    if number % 3 == 0:
        sum += number
print(sum)

[Hw3]
# Q1. 다음 코드의 결괏값은 무엇일까?
a = "Life is too short, you need python"
if "wife" in a: print("wife")
elif "python" in a and "you" not in a: print("python")
elif "shirt" not in a: print("shirt") # 참
elif "need" in a: print("need") # 참
else: print("none")
# 결과: shirt가 출력된다. 이유: 세번째, 네번째 조건 빼고 모두 거짓임. 가장 먼저 참이 되는 shirt가 출력됨

# Q2. while문을 사용해 1부터 1000까지의 자연수 중 3의 배수의 합을 구해 보자.
number = 0
sum = 0
while number < 1000:
    number += 1  # number가 1000보다 작은 동안 number는 1만큼씩 계속 증가.
    # Alternatively, you can use "number = number + 1"
    if number % 3 == 0:
        sum += number
print(sum)

# Q3. while문을 사용하여 다음과 같이 별(*)을 표시하는 프로그램을 작성해 보자.
star = 0
while True:
    star += 1 # while문 수행하는 동안 star값 1씩 증가함.
    print("*" * star) # star값만큼 *를 출력함.
    if star == 5: break # star값이 5와 같으면 while문을 벗어남.

# Q4. for문을 사용해 1부터 100까지의 숫자를 출력해 보자.
for number in range(1, 100):
    print(number)

# Q5. A 학급에 총 10명의 학생이 있다. 이 학생들의 중간고사 점수는 다음과 같다. [70, 60, 55, 75, 95, 90, 80, 80, 85, 100]. for문을 사용하여 A 학급의 평균 점수를 구해 보자.
Agrades = [70, 60, 55, 75, 95, 90, 80, 80, 85, 100]
sum = 0
for number in Agrades:
    sum += number
average = sum/len(Agrades)
print(average)

# Q6. 리스트 중에서 홀수에만 2를 곱하여 저장하는 다음 코드가 있다. 다음 코드를 리스트 내포(list comprehension)를 사용하여 표현해 보자.
numbers = [1, 2, 3, 4, 5]
result = []
for n in numbers:
    if n % 2 == 1:
        result.append(n*2)
# list comprehension을 사용한 표현(아래)
numbers = [1, 2, 3, 4, 5]
result = [i * 2 for i in numbers if i % 2 == 1]
print(result)

[Hw4]

# Q1. 주어진 자연수가 홀수인지 짝수인지 판별해 주는 함수(is_odd)를 작성해 보자.
def is_odd(number):
    if number % 2 == 1:
        return True
    else:
        return False

a = is_odd(3)
print(a)

# Q2. 입력으로 들어오는 모든 수의 평균 값을 계산해 주는 함수를 작성해 보자. (단 입력으로 들어오는 수의 개수는 정해져 있지 않다.) 평균 값을 구할 때 len 함수를 사용해 보자.
def average(*args):
    result = sum(args) / len(args)
    return result

b = average(1, 2, 3)
print(b)

# Q3. 프로그램의 오류를 수정해 보자.
input1 = input("첫번째 숫자를 입력하세요:")
input2 = input("두번째 숫자를 입력하세요:")

total = int(input1) + int(input2) #int 함수 사용.
print("두 수의 합은 %s 입니다" % total)

# Q4. 다음 중 출력 결과가 다른 것 한 개를 골라 보자.
print("you" "need" "python")
print("you"+"need"+"python")
print("you", "need", "python") # 출력 결과가 다름. 단어사이에 띄어쓰기가 있음.
print("".join(["you", "need", "python"]))

# Q5. 이 프로그램은 우리가 예상한 "Life is too short"라는 문장을 출력하지 않는다. 우리가 예상한 값을 출력할 수 있도록 프로그램을 수정해 보자.
f1 = open("test.txt", 'w')
f1.write("Life is too short")
f1.close() # 열린 파일 객체를 닫아야 다시 열어서 파일의 내용을 읽음.

f2 = open("test.txt", 'r')
print(f2.read())
f2.close()

# Q6. 사용자의 입력을 파일(test.txt)에 저장하는 프로그램을 작성해 보자.(단 프로그램을 다시 실행하더라도 기존에 작성한 내용을 유지하고 새로 입력한 내용을 추가해야 한다.)
data = input("저장할 내용:")
f = open("test.txt", 'a')
f.write("\n")
f.write(data)
f.write("\n")
f.close()

# Q7. 다음과 같은 내용을 지닌 파일 test.txt가 있다.
 Life is too short
 you need java
# 이 파일의 내용 중 "java"라는 문자열을 "python"으로 바꾸어서 저장해 보자.(replace 함수를 사용해보자)
f = open("test.txt", 'r')
data = f.read()
f.close()
data = data.replace("java", "python")
f = open("test.txt", 'w')
f.write(data)
f.close()

[Hw6]
import pandas as pd
df = pd.read_csv("bee_data.csv")
print(df)




